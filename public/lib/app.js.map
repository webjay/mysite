{"version":3,"sources":["app/app.js","app/index.static.hbs","app/layouts/main.static.hbs","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CC1DA;CCAA;CCAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/lib/app.js","sourcesContent":["/* eslint-env browser */\n'use strict';\n\nvar tagstrip_re = /(\\.|\\?|!)(\\s#\\w+)+$/m;\nvar url = 'https://d2nb7t6y3zkbd1.cloudfront.net/instagrams.json';\n\nfunction getPhotos (url, handler) {\n  var request = new XMLHttpRequest();\n  request.open('GET', url, true);\n  request.onload = function () {\n    if (request.status >= 200 && request.status < 400) {\n      handler(JSON.parse(request.responseText));\n    }\n  };\n  request.send();\n}\n\nfunction insertPhotos (photos) {\n  if (photos.length === 0) return;\n  var columnCount = 3;\n  var rowsCount = Math.floor(photos.length / columnCount);\n  if (rowsCount === 0) return;\n  var grid = document.getElementById('photos');\n  var firstrow = grid.getElementsByClassName('row')[0];\n  var fragment = document.createDocumentFragment();\n  var imgNo = 0;\n  for (var rowNo = 0; rowNo < rowsCount; rowNo++) {\n    var row = (rowNo !== 0) ? firstrow.cloneNode(true) : firstrow;\n    var columns = row.getElementsByClassName('card');\n    for (var colNo = 0; colNo < columnCount; colNo++) {\n      var anchor = columns[colNo].getElementsByTagName('a')[0];\n      var image = columns[colNo].getElementsByTagName('img')[0];\n      var caption = columns[colNo].getElementsByClassName('card-text')[0];\n      anchor.attributes.href.value = photos[imgNo].link;\n      image.attributes.src.value = photos[imgNo].images.low_resolution.url;\n      image.attributes.alt.value = photos[imgNo].tags.join();\n      if (photos[imgNo].caption !== null) {\n        caption.textContent = photos[imgNo].caption.text.replace(tagstrip_re, '$1');\n      } else {\n        caption.textContent = '';\n      }\n      imgNo++;\n    }\n    if (rowNo !== 0) {\n      fragment.appendChild(row);\n    }\n  }\n  grid.appendChild(fragment);\n}\n\nfunction init () {\n  getPhotos(url, insertPhotos);\n}\n\ndocument.addEventListener('DOMContentLoaded', init);\nif (document.readyState !== 'loading') {\n  init();\n}\n","","","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}